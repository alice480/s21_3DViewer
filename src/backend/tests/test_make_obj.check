#tcase make_obj
#test make_obj_1
char filename[] = "../models/cube_1.txt";
obj ob = {NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0};
int result = make_obj(&ob, filename);
ck_assert_int_eq(result, 0);
ck_assert_int_eq(ob.vnum, 11);
ck_assert_int_eq(ob.fnum, 12);
ck_assert_int_eq(ob.faces[11].vertexes[1], 7);
free_obj(&ob);

#test make_obj_2
char filename[] = "../models/no_file.txt";
obj ob = {NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0};
int result = make_obj(&ob, filename);
ck_assert_int_eq(result, 1);
free_obj(&ob);

#test make_obj_3
char filename[] = "../models/error.txt";
obj ob = {NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0};
int result = make_obj(&ob, filename);
ck_assert_int_eq(result, 3);
free_obj(&ob);

#test make_obj_4
char filename[] = "../models/cube_2.txt";
obj ob = {NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0};
int result = make_obj(&ob, filename);
ck_assert_int_eq(result, 0);
ck_assert_int_eq(ob.vnum, 8);
ck_assert_int_eq(ob.fnum, 6);
ck_assert_int_eq(ob.faces[5].num, 4);
free_obj(&ob);

#test make_obj_5
char filename[] = "../models/Lancer.txt";
obj ob = {NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0};
int result = make_obj(&ob, filename);
ck_assert_int_eq(result, 0);
ck_assert_int_eq(ob.vnum, 716);
ck_assert_int_eq(ob.fnum, 830);
ck_assert_int_eq(ob.faces[829].num, 4);
ck_assert_int_eq(ob.faces[829].vertexes[0], 623);
ck_assert_int_eq(ob.faces[829].vertexes[1], 624);
ck_assert_int_eq(ob.faces[829].vertexes[2], 712);
ck_assert_int_eq(ob.faces[829].vertexes[3], 707);
ck_assert_int_eq(ob.faces[823].num, 3);
ck_assert_int_eq(ob.faces[823].vertexes[0], 713);
ck_assert_int_eq(ob.faces[823].vertexes[1], 711);
ck_assert_int_eq(ob.faces[823].vertexes[2], 712);
ck_assert_double_eq_tol(ob.vertexes[2].x, 75.7045, EPS);
ck_assert_double_eq_tol(ob.vertexes[2].y, 65.0307, EPS);
ck_assert_double_eq_tol(ob.vertexes[2].z, 252.6918, EPS);
free_obj(&ob);
